     1                                  bits 32
     2                                  global start 
     3                                  import fclose msvcrt.dll
     4                                  import fscanf msvcrt.dll
     5                                  import fopen msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  import gets msvcrt.dll
    10                                  import exit msvcrt.dll
    11                                  import fread msvcrt.dll
    12                                  extern printf, exit, scanf, fopen, fscanf, fclose, fprintf, gets,fread
    13                                  
    14                                  ;18.	Se citeste un sir din input.txt. sa se afiseze invers.
    15                                  segment data use32 class=data
    16 00000000 <res 000000C8>          s resb 200
    17 000000C8 <res 000000C8>          inv resb 200
    18 00000190 696E7075742E747874-     filename db 'input.txt',0
    18 00000199 00                 
    19 0000019A 7200                    mod_acces db 'r',0
    20 0000019C 257300                  format db '%s',0
    21 0000019F FFFFFFFF                descriptor dd -1
    22                                  len equ 200
    23                                  segment code use32 class=code
    24                                  start:
    25 00000000 68[9A010000]                push mod_acces
    26 00000005 68[90010000]                push filename
    27 0000000A FF15[00000000]              call [fopen]
    28 00000010 83C408                      add esp,4*2
    29                                      
    30 00000013 A3[9F010000]                mov dword[descriptor],eax
    31                                      
    32 00000018 FF35[9F010000]              push dword[descriptor]
    33 0000001E 68C8000000                  push len
    34 00000023 6A01                        push 1
    35 00000025 68[00000000]                push s 
    36 0000002A FF15[00000000]              call [fread]
    37 00000030 83C410                      add esp,4*4
    38 00000033 FF35[9F010000]              push dword[descriptor]
    39 00000039 FF15[00000000]              call [fclose]
    40 0000003F 83C404                      add esp,4
    41 00000042 BE[00000000]                mov esi,s 
    42 00000047 C6040600                    mov byte[esi+eax],0
    43 0000004B 01C6                        add esi,eax
    44 0000004D 4E                          dec esi
    45 0000004E FD                          std
    46 0000004F BF[C8000000]                mov edi,inv
    47 00000054 89C1                        mov ecx,eax
    48                                      bucla:
    49 00000056 FD                          std
    50 00000057 AC                          lodsb
    51 00000058 FC                          cld
    52 00000059 AA                          stosb
    53 0000005A E2FA                        loop bucla
    54 0000005C C60700                      mov byte[edi],0
    55                                      
    56 0000005F 68[C8000000]                push inv
    57 00000064 FF15[00000000]              call [printf]
    58 0000006A 83C404                      add esp,4
    59                                      
    60                                      
    61 0000006D 6A00                        push dword 0
    62 0000006F FF15[00000000]              call [exit]
    63                                  
    64                                     
