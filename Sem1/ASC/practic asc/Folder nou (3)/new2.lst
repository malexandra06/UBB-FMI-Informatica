     1                                  bits 32
     2                                  global start 
     3                                  import fclose msvcrt.dll
     4                                  import fscanf msvcrt.dll
     5                                  import fopen msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  import gets msvcrt.dll
    10                                  import exit msvcrt.dll
    11                                  import fread msvcrt.dll
    12                                  extern printf, exit, scanf, fopen, fscanf, fclose, fprintf, gets,fread
    13                                  
    14                                  
    15                                  
    16                                  
    17                                  segment data use32 class=data
    18                                  
    19 00000000 00000000                n dd 0
    20 00000004 256300                  format db '%c',0
    21 00000007 <res 00000064>          sir resb 100
    22 0000006B 726573756C742E7478-     filename db 'result.txt',0
    22 00000074 7400               
    23 00000076 7700                    mod_acces db 'w',0
    24 00000078 FFFFFFFF                descriptor dd -1
    25 0000007C 257300                  format_sir db '%s',0
    26                                  segment code use32 class=code
    27                                  start:
    28 00000000 BF[07000000]                mov edi,sir
    29 00000005 B900000000                  mov ecx,0
    30 0000000A BB00000000                  mov ebx,0
    31                                      citire:
    32 0000000F 51                              push ecx
    33 00000010 68[00000000]                    push n
    34 00000015 68[04000000]                    push format
    35 0000001A FF15[00000000]                  call [scanf]
    36 00000020 83C408                          add esp,4*2
    37                                          
    38 00000023 59                              pop ecx
    39 00000024 803D[00000000]21                cmp byte[n],'!'
    40 0000002B 7432                            JE iesire
    41 0000002D 803D[00000000]20                cmp byte[n],' '
    42 00000034 74D9                            JE citire
    43 00000036 803D[00000000]0A                cmp byte[n],10
    44 0000003D 74D0                            JE citire
    45 0000003F F605[00000000]01                test byte[n],1
    46 00000046 74C7                            JZ citire
    47 00000048 A0[00000000]                    mov al,byte[n]
    48 0000004D BF[07000000]                    mov edi,sir
    49 00000052 E305                            jecxz true
    50                                          parcurgere:
    51 00000054 AE                                  scasb
    52 00000055 7404                                JE jos
    53 00000057 E2FB                            loop parcurgere
    54                                          true:
    55 00000059 AA                              stosb
    56 0000005A 43                              inc ebx
    57                                          jos:
    58 0000005B 89D9                                mov ecx,ebx
    59 0000005D EBB0                                JMP citire
    60                                      
    61                                      iesire:
    62 0000005F 51                          push ecx
    63 00000060 68[07000000]                push sir
    64 00000065 E84B000000                  call sortare
    65 0000006A 83C408                      add esp,4*2
    66                                      
    67 0000006D 68[76000000]                push mod_acces
    68 00000072 68[6B000000]                push filename
    69 00000077 FF15[00000000]              call [fopen]
    70 0000007D 83C408                      add esp,4*2
    71                                      
    72 00000080 A3[78000000]                mov [descriptor],eax
    73                                      
    74 00000085 68[07000000]                push sir
    75 0000008A 68[7C000000]                push format_sir
    76 0000008F FF35[78000000]              push dword[descriptor]
    77 00000095 FF15[00000000]              call [fprintf]
    78 0000009B 83C40C                      add esp,4*3
    79                                      
    80 0000009E FF35[78000000]              push dword[descriptor]
    81 000000A4 FF15[00000000]              call [fclose]
    82 000000AA 83C404                      add esp,4 
    83 000000AD 6A00                        push dword 0
    84 000000AF FF15[00000000]              call [exit]
    85                                      
    86                                      sortare:
    87 000000B5 8B742404                        mov esi,[esp+4]
    88                                          
    89 000000B9 8B4C2408                        mov ecx,[esp+8]
    90 000000BD 49                              dec ecx
    91 000000BE BB01000000                          mov ebx,1
    92                                              bucla:
    93 000000C3 AC                                      lodsb
    94 000000C4 3A06                                    cmp al,byte[esi]
    95 000000C6 770C                                    JA ok
    96 000000C8 8A16                                    mov dl,byte[esi]
    97 000000CA 8856FF                                  mov byte[esi-1],dl
    98 000000CD 8806                                    mov byte[esi],al
    99 000000CF BB00000000                              mov ebx,0
   100                                                  ok:
   101 000000D4 E2ED                                loop bucla
   102 000000D6 83FB00                              cmp ebx,0
   103 000000D9 74DA                                JZ sortare
   104 000000DB C3                          ret
