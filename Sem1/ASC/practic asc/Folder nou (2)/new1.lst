     1                                  bits 32
     2                                  global start 
     3                                  import fclose msvcrt.dll
     4                                  import fscanf msvcrt.dll
     5                                  import fopen msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import fprintf msvcrt.dll
     9                                  import gets msvcrt.dll
    10                                  import exit msvcrt.dll
    11                                  import fread msvcrt.dll
    12                                  extern printf, exit, scanf, fopen, fscanf, fclose, fprintf, gets,fread
    13                                  
    14                                  
    15                                  
    16                                  
    17                                  segment data use32 class=data
    18 00000000 <res 00000032>          filename resb 50
    19 00000032 <res 00000064>          sir resb 100
    20 00000096 257300                  format_sir db '%s',0
    21 00000099 303132333435363738-     tabHexa db '0123456789ABCDEF',0
    21 000000A2 3941424344454600   
    22 000000AA 7200                    mod_acces db 'r',0
    23 000000AC FFFFFFFF                descriptor dd -1
    24                                  len equ 100
    25 000000B0 00000000                len_sir dd 0
    26 000000B4 6165696F754145494F-     vocale db 'aeiouAEIOU',0
    26 000000BD 5500               
    27 000000BF 257500                  format_af db '%u',0
    28 000000C2 <res 00000064>          nr resb 100
    29 00000126 00                      lg db 0
    30 00000127 256300                  format_ch db '%c',0
    31                                  segment code use32 class=code
    32                                  start:
    33 00000000 68[00000000]                push filename
    34 00000005 68[96000000]                push format_sir
    35 0000000A FF15[00000000]              call [scanf]
    36 00000010 83C408                      add esp,4*2
    37                                      
    38                                      ;fopen(filename,mod_acces)
    39 00000013 68[AA000000]                push mod_acces
    40 00000018 68[00000000]                push filename
    41 0000001D FF15[00000000]              call [fopen]
    42 00000023 83C408                      add esp,4*2
    43                                      
    44 00000026 A3[AC000000]                mov [descriptor],eax
    45                                      
    46                                      ;fread(sir,1,len,descriptor)
    47 0000002B FF35[AC000000]              push dword[descriptor]
    48 00000031 6A64                        push len
    49 00000033 6A01                        push 1
    50 00000035 68[32000000]                push sir
    51 0000003A FF15[00000000]              call [fread]
    52 00000040 83C410                      add esp,4*4
    53                                      
    54 00000043 A3[B0000000]                mov [len_sir],eax
    55                                      
    56                                      ;fclose(descriptor)
    57 00000048 FF35[AC000000]              push dword[descriptor]
    58 0000004E FF15[00000000]              call [fclose]
    59 00000054 83C404                      add esp,4
    60                                      
    61                                      ;push vocale
    62                                      ;push dword[len_sir]
    63                                      ;push sir
    64                                      ;call numara
    65                                      ;add esp,4*3
    66                                      
    67                                      numara:
    68 00000057 BE[32000000]                    mov esi,sir
    69 0000005C 8B0D[B0000000]                  mov ecx,[len_sir]
    70 00000062 BA00000000                      mov edx,0
    71                                          parcurgere:
    72 00000067 AC                                  lodsb
    73                                              
    74 00000068 51                                  push ecx
    75 00000069 56                                  push esi
    76                                              verific_litera:
    77 0000006A 3C41                                    cmp al,'A'
    78 0000006C 7220                                    JB iesire
    79 0000006E 3C7A                                    cmp al,'z'
    80 00000070 771C                                    JA iesire
    81 00000072 3C5A                                    cmp al,'Z'
    82 00000074 7604                                    JBE litera
    83 00000076 3C61                                    cmp al,'a'
    84 00000078 7214                                    JB iesire
    85                                              litera:
    86 0000007A B90A000000                          mov ecx,10
    87 0000007F BE[B4000000]                        mov esi,vocale
    88 00000084 88C3                                mov bl,al
    89                                              verific_consoana:
    90 00000086 AC                                      lodsb
    91 00000087 38C3                                    cmp bl,al
    92 00000089 7403                                    JE iesire
    93 0000008B E2F9                                loop verific_consoana
    94 0000008D 42                                  INC EDX
    95                                              iesire:
    96 0000008E 5E                                      pop esi
    97 0000008F 59                                      pop ecx
    98 00000090 E2D5                            loop parcurgere
    99                                      
   100                                     
   101                                      
   102 00000092 B910000000                  mov ecx,16
   103 00000097 BB[99000000]                mov ebx,tabHexa
   104 0000009C BF[C2000000]                mov edi,nr
   105 000000A1 89D0                        mov eax,edx
   106                                      impart:
   107                                          
   108 000000A3 BA00000000                      mov edx,0
   109 000000A8 F7F1                            div ecx
   110 000000AA 86C2                            xchg al,dl
   111 000000AC AA                              stosb
   112 000000AD 86C2                            xchg al,dl
   113 000000AF FE05[26010000]                  inc byte[lg]
   114 000000B5 83F800                          cmp eax,0
   115 000000B8 75E9                            JNE impart
   116                                      
   117 000000BA B8[C2000000]                mov eax,nr
   118 000000BF BB[99000000]                mov ebx,tabHexa
   119 000000C4 D7                          xlat
   120 000000C5 BF[C2000000]                mov edi,nr
   121 000000CA B900000000                  mov ecx,0
   122 000000CF 8A0D[26010000]              mov cl,[lg]
   123 000000D5 FD                          std
   124 000000D6 01CF                        add edi,ecx
   125 000000D8 4F                          dec edi
   126                                      afis:
   127 000000D9 AC                              lodsb
   128 000000DA 51                              push ecx
   129 000000DB 57                              push edi
   130 000000DC 88C3                            mov bl,al
   131 000000DE B800000000                      mov eax,0
   132 000000E3 88D8                            mov al,bl
   133 000000E5 50                              push eax
   134 000000E6 68[27010000]                    push format_ch
   135 000000EB FF15[00000000]                  call [printf]
   136 000000F1 5F                              pop edi
   137 000000F2 59                              pop ecx
   138 000000F3 E2E4                        loop afis
   139 000000F5 6A00                        push dword 0
   140 000000F7 FF15[00000000]              call [exit]
   141                                  
   142                                      
   143                                      
