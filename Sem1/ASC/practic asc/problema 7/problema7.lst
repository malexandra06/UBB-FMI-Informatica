     1                                  bits 32 ;asamblare si compilare pentru arhitectura de 32 biti
     2                                  ; definim punctul de intrare in programul principal
     3                                  global  start 
     4                                  import fclose msvcrt.dll
     5                                  import fscanf msvcrt.dll
     6                                  import fopen msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  import fprintf msvcrt.dll
    10                                  import gets msvcrt.dll
    11                                  import exit msvcrt.dll
    12                                  extern printf, exit,scanf,fopen,fscanf,fclose,fprintf,gets
    13                                          ; msvcrt.dll contine exit, printf si toate celelalte functii C-runtime importante
    14                                  ;7.	Se da un sir de qword definit in data segment. elementele sirului sunt in baza 16
    15                                  ;a)	sa se printeze bytes care compun qword urile din sir
    16                                  ;b) sa se identifice words care au ultima cifra egala cu constanta k definita in segmentul de date. sa se salveze aceste words in sirul d
    17                                  ;c)	sa se identifice dwords care sunt cuprinse in intervalul AAA - FFFF. sa se determine numarul dwords din acest interval. sa se afiseze acest numar in baza 10 in fisierul 'iesire.txt'
    18                                  
    19                                  segment  data use32 class=data ; segmentul de date in care se vor defini variabilele 
    20 00000000 554433221100000033-     s dq 1122334455h,2433h,4815h,829h,4326786639h
    20 00000009 240000000000001548-
    20 00000012 000000000000290800-
    20 0000001B 000000000039667826-
    20 00000024 43000000           
    21                                  lenb equ $-s
    22                                  lenw equ ($-s)/2
    23                                  lend equ ($-s)/4
    24 00000028 25782000                format db '%x ',0
    25 0000002C 0A00                    spatiu db 0x0A,0
    26 0000002E <res 000000C8>          d resw 100
    27                                  k equ 5h
    28 000000F6 6965736972652E7478-     filename db 'iesire.txt',0
    28 000000FF 7400               
    29 00000101 7700                    mod_acces db 'w',0
    30 00000103 FFFFFFFF                descriptor dd -1
    31                                  segment  code use32 class=code ; segmentul de cod
    32                                  start: 
    33                                      
    34 00000000 BE[00000000]                mov esi,s
    35 00000005 B914000000                  mov ecx,lenw
    36 0000000A BF[2E000000]                mov edi,d
    37 0000000F FC                          cld
    38 00000010 E311                        JECXZ final2
    39                                      bucla_sir:
    40 00000012 66AD                        lodsw
    41 00000014 6689C3                      mov bx,ax
    42 00000017 80E30F                      and bl,1111b
    43 0000001A 80FB05                      cmp bl,k
    44 0000001D 7502                        JNE final_b
    45 0000001F 66AB                        stosw
    46                                      final_b:
    47 00000021 E2EF                        loop bucla_sir
    48                                      final2:
    49 00000023 BE[00000000]                mov esi,s
    50 00000028 FC                          cld
    51 00000029 B90A000000                  mov ecx,lend
    52 0000002E BA00000000                  mov edx,0
    53                                      bucla_d:
    54 00000033 AD                          lodsd
    55 00000034 3DAA0A0000                  cmp eax,0AAAh
    56 00000039 7208                        JB ies
    57 0000003B 3DFFFF0000                  cmp eax,0FFFFh
    58 00000040 7701                        JA ies
    59 00000042 42                          inc edx
    60                                      ies:
    61 00000043 E2EE                        loop bucla_d
    62 00000045 52                          push edx
    63                                      ;fopen(filename,mod_acces)
    64 00000046 68[01010000]                push mod_acces
    65 0000004B 68[F6000000]                push filename
    66 00000050 FF15[00000000]              call [fopen]
    67 00000056 83C408                      add esp,4*2
    68 00000059 83F800                      cmp eax,0
    69 0000005C 742A                        JE final3
    70 0000005E A3[03010000]                mov dword[descriptor],eax
    71                                      ;fprintf(descriptor,format,nr)
    72 00000063 5A                          pop edx
    73 00000064 52                          push edx
    74 00000065 68[28000000]                push dword format
    75 0000006A FF35[03010000]              push dword[descriptor]
    76 00000070 FF15[00000000]              call [fprintf]
    77 00000076 83C40C                      add esp,4*3
    78                                      ;fclose(descriptor)
    79 00000079 FF35[03010000]              push dword[descriptor]
    80 0000007F FF15[00000000]              call [fclose]
    81 00000085 83C404                      add esp,4
    82                                      final3:
    83 00000088 6A00                        push   dword 0 ;se pune pe stiva codul de retur al functiei exit
    84 0000008A FF15[00000000]          	call   [exit] ;apelul functiei sistem exit pentru terminarea executiei programului
